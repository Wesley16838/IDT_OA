{"ast":null,"code":"var _jsxFileName = \"/Users/wesley/Desktop/idt/client/src/Components/googlemap.js\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nconst mapStyles = {\n  width: '80%',\n  height: '80%'\n};\n\nclass Googlemap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: parseInt(this.props.lat),\n      lng: parseInt(this.props.lng)\n    };\n  }\n\n  render() {\n    console.log('render google map');\n    console.log('this.state in google,', this.state);\n    console.log('this.props in google,', this.props);\n\n    if (this.props.lat == '' && this.props.lng == '') {\n      return React.createElement(Map, {\n        google: this.props.google,\n        zoom: 8,\n        style: mapStyles,\n        initialCenter: {\n          lat: 39.833851,\n          lng: -74.871826\n        },\n        center: {\n          lat: 39.833851,\n          lng: -74.871826\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: 39.833851,\n          lng: -74.871826\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Map, {\n        google: this.props.google,\n        zoom: 8,\n        style: mapStyles,\n        initialCenter: {\n          lat: this.props.lat,\n          lng: this.props.lng\n        },\n        center: {\n          lat: this.props.lat,\n          lng: this.props.lng\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: this.props.lat,\n          lng: this.props.lng\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBmuVFyl548_WfKr2oqchbb4LgEiwHYjEU'\n})(Googlemap);","map":{"version":3,"sources":["/Users/wesley/Desktop/idt/client/src/Components/googlemap.js"],"names":["Map","GoogleApiWrapper","Marker","React","Component","mapStyles","width","height","Googlemap","constructor","props","state","lat","parseInt","lng","render","console","log","google","apiKey"],"mappings":";AAAA,SAASA,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAlB;;AAIA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAGC,QAAQ,CAAC,KAAKH,KAAL,CAAWE,GAAZ,CADL;AAETE,MAAAA,GAAG,EAAGD,QAAQ,CAAC,KAAKH,KAAL,CAAWI,GAAZ;AAFL,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoC,KAAKN,KAAzC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoC,KAAKP,KAAzC;;AACA,QAAG,KAAKA,KAAL,CAAWE,GAAX,IAAkB,EAAlB,IAAwB,KAAKF,KAAL,CAAWI,GAAX,IAAkB,EAA7C,EAAgD;AAC9C,aAEI,oBAAC,GAAD;AACA,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWQ,MADnB;AAEA,QAAA,IAAI,EAAE,CAFN;AAGA,QAAA,KAAK,EAAEb,SAHP;AAIA,QAAA,aAAa,EAAE;AAAGO,UAAAA,GAAG,EAAE,SAAR;AACXE,UAAAA,GAAG,EAAE,CAAC;AADK,SAJf;AAMA,QAAA,MAAM,EAAE;AAAGF,UAAAA,GAAG,EAAE,SAAR;AACJE,UAAAA,GAAG,EAAE,CAAC;AADF,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQC,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE;AAAEF,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,CAFJ;AAeD,KAhBD,MAgBK;AACH,aAEI,oBAAC,GAAD;AACA,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWQ,MADnB;AAEA,QAAA,IAAI,EAAE,CAFN;AAGA,QAAA,KAAK,EAAEb,SAHP;AAIA,QAAA,aAAa,EAAE;AAAGO,UAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAAnB;AACXE,UAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI;AADL,SAJf;AAMI,QAAA,MAAM,EAAE;AAAGF,UAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAAnB;AACJE,UAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI;AADZ,SANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQC,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE;AAAEF,UAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAAlB;AAAuBE,UAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI;AAAvC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,CAFJ;AAeD;AAEF;;AAjD6B;;AAmDhC,eAAeb,gBAAgB,CAAC;AAC9BkB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZX,SAFY,CAAf","sourcesContent":["import { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, {Component} from 'react';\nconst mapStyles = {\n    width: '80%',\n    height: '80%',\n    };\nclass Googlemap extends Component {\n    constructor(props) {\n      super(props);\n      \n      this.state = {\n          lat : parseInt(this.props.lat),\n          lng : parseInt(this.props.lng),\n      }\n    }\n   \n    render() {\n  \n      console.log('render google map')\n      console.log('this.state in google,',this.state)\n      console.log('this.props in google,',this.props)\n      if(this.props.lat == '' && this.props.lng == ''){\n        return (\n          \n            <Map\n            google={this.props.google}\n            zoom={8}\n            style={mapStyles}\n            initialCenter={{  lat: 39.833851,\n                lng: -74.871826}}\n            center={{  lat: 39.833851,\n                lng: -74.871826}} >\n             <Marker position={{ lat: 39.833851, lng: -74.871826}} />\n          </Map>\n          \n          \n      );\n      }else{\n        return (\n          \n            <Map\n            google={this.props.google}\n            zoom={8}\n            style={mapStyles}\n            initialCenter={{  lat: this.props.lat,\n                lng: this.props.lng}}\n                center={{  lat: this.props.lat,\n                    lng: this.props.lng}}>\n             <Marker position={{ lat: this.props.lat, lng: this.props.lng}} />\n          </Map>\n          \n          \n      );\n      }\n      \n    }\n  }\n  export default GoogleApiWrapper({\n    apiKey: 'AIzaSyBmuVFyl548_WfKr2oqchbb4LgEiwHYjEU'\n  })(Googlemap);"]},"metadata":{},"sourceType":"module"}