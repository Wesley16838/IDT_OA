{"ast":null,"code":"var _jsxFileName = \"/Users/wesley/Desktop/idt/client/src/Components/landingpage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Googlemap from './googlemap';\nimport { withRouter } from 'react-router-dom';\n\nclass Dashboardpage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        ip: e.target.value\n      });\n    };\n\n    this.handleChangemobile = e => {\n      this.setState({\n        mobilep: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      try {\n        e.preventDefault();\n        let {\n          ip,\n          mobile\n        } = this.state;\n\n        if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) {\n          var info = await axios.get('https://api.ipgeolocation.io/ipgeo?apiKey=e53d709ac76741288e7508c734e53785&ip=' + ip);\n          var result = await axios.post('/location', {\n            ip: ip,\n            latitude: info.data.latitude,\n            longitude: info.data.longitude,\n            mobile: mobile\n          });\n          this.setState({\n            latitude: result.data.location.latitude,\n            longitude: result.data.location.longitude\n          });\n        } else {\n          alert(\"You have entered an invalid IP address!\");\n        }\n      } catch (e) {\n        console.log('error: ' + e);\n      }\n    };\n\n    this.state = {\n      ip: '',\n      latitude: '',\n      longitude: '',\n      mobile: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    console.log(\"in landingpage render!!!\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Ip address\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"ip\",\n      \"aria-describedby\": \"ipHelp\",\n      name: \"ip\",\n      value: this.state.ip,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      type: \"test\",\n      pattern: \"[0-9]*\",\n      className: \"form-control\",\n      id: \"mobile\",\n      \"aria-describedby\": \"mobileHelp\",\n      name: \"mobile\",\n      value: this.state.mobile,\n      onChange: this.handleChangemobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"mobileHelp\",\n      className: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Input mobile to get message about information of location(Only allow U.S. User).\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"latitude: \", this.state.latitude), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"longitude: \", this.state.longitude)), React.createElement(Googlemap, {\n      lat: this.state.latitude,\n      lng: this.state.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(Dashboardpage);","map":{"version":3,"sources":["/Users/wesley/Desktop/idt/client/src/Components/landingpage.js"],"names":["React","Component","axios","Googlemap","withRouter","Dashboardpage","constructor","props","handleChange","e","setState","ip","target","value","handleChangemobile","mobilep","handleSubmit","preventDefault","mobile","state","test","info","get","result","post","latitude","data","longitude","location","alert","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Googlemap from './googlemap'\nimport {\n    withRouter\n  } from 'react-router-dom'\nclass Dashboardpage extends Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n        ip:'',\n        latitude:'',\n        longitude:'',\n        mobile:''\n    }\n    \n  }\n  \n  componentDidMount() {\n    \n  }\n \n  handleChange = e => {\n     \n       \n      \n    this.setState({ip: e.target.value});\n  };\n  handleChangemobile = e => {\n     \n       \n      \n    this.setState({mobilep: e.target.value});\n  };\n\n  handleSubmit = async e => {\n    try {\n\n        \n        e.preventDefault(); \n        let { ip,mobile } = this.state;\n       \n        if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) { \n          \n            var info = await axios.get('https://api.ipgeolocation.io/ipgeo?apiKey=e53d709ac76741288e7508c734e53785&ip='+ip)\n            \n            var result = await axios.post('/location',{\n                ip: ip,\n                latitude: info.data.latitude,\n                longitude: info.data.longitude,\n                mobile:mobile\n              })   \n            this.setState({latitude:result.data.location.latitude, longitude:result.data.location.longitude})\n\n        }else{\n            alert(\"You have entered an invalid IP address!\")  \n        }\n  \n    }catch(e){\n        console.log('error: ' + e);\n    }\n  }\n  render() {\n    console.log(\"in landingpage render!!!\")\n    return(\n        <div className='container'>\n        \n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"ip\">Ip address</label>\n                    <input type=\"text\" className=\"form-control\" id=\"ip\" aria-describedby=\"ipHelp\" name=\"ip\" value={this.state.ip} onChange={this.handleChange}/>\n                    <label htmlFor=\"mobile\">Phone Number</label>\n                    <input type=\"test\" pattern=\"[0-9]*\" className=\"form-control\" id=\"mobile\" aria-describedby=\"mobileHelp\" name=\"mobile\" value={this.state.mobile} onChange={this.handleChangemobile}/>\n                    <small id=\"mobileHelp\" className=\"form-text text-muted\">Input mobile to get message about information of location(Only allow U.S. User).</small>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n            <div className=\"location\">\n                <p>latitude: {this.state.latitude}</p> \n                <p>longitude: {this.state.longitude}</p>\n            </div>\n            <Googlemap lat={this.state.latitude} lng={this.state.longitude}/>\n        </div>\n           \n    \n    )\n  }\n}\n\nexport default withRouter(Dashboardpage);"]},"metadata":{},"sourceType":"module"}