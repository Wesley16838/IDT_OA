{"version":3,"sources":["Components/googlemap.js","Components/landingpage.js","Components/historyList.js","Components/history.js","Components/header.js","App.js","serviceWorker.js","index.js"],"names":["mapStyles","width","height","Googlemap","props","state","lat","parseInt","lng","console","log","this","google","zoom","style","initialCenter","center","position","Component","GoogleApiWrapper","apiKey","Dashboardpage","handleChange","e","setState","ip","target","value","handleChangemobile","mobile","replace","handleSubmit","a","preventDefault","test","length","axios","get","info","post","latitude","data","longitude","result","location","alert","className","onSubmit","htmlFor","type","id","aria-describedby","name","onChange","placeholder","withRouter","Historylist","top","num","newtop","date","submit","locations","newnum","new_locations","newlocations","i","push","arr","split","arr_next","arr_before","j","time","l","datelength","k","pop","datelocations","reverse","err","section","map","next","key","errtop","errdate","History","loading","then","Header","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","content","property","exact","path","render","title","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wUAEMA,EAAY,CACdC,MAAO,MACPC,OAAQ,OAENC,E,YACF,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACTC,IAAMC,SAAS,EAAKH,MAAME,KAC1BE,IAAMD,SAAS,EAAKH,MAAMI,MALb,E,sEAcjB,OAHAC,QAAQC,IAAI,qBACZD,QAAQC,IAAI,wBAAwBC,KAAKN,OACzCI,QAAQC,IAAI,wBAAwBC,KAAKP,OACnB,KAAnBO,KAAKP,MAAME,KAAiC,KAAnBK,KAAKP,MAAMI,IAGjC,kBAAC,MAAD,CACAI,OAAQD,KAAKP,MAAMQ,OACnBC,KAAM,EACNC,MAAOd,EACPe,cAAe,CAAGT,IAAK,UACnBE,KAAM,WACVQ,OAAQ,CAAGV,IAAK,UACZE,KAAM,YACT,kBAAC,SAAD,CAAQS,SAAU,CAAEX,IAAK,UAAWE,KAAM,cAQ3C,kBAAC,MAAD,CACAI,OAAQD,KAAKP,MAAMQ,OACnBC,KAAM,EACNC,MAAOd,EACPe,cAAe,CAAGT,IAAKK,KAAKP,MAAME,IAC9BE,IAAKG,KAAKP,MAAMI,KAChBQ,OAAQ,CAAGV,IAAKK,KAAKP,MAAME,IACvBE,IAAKG,KAAKP,MAAMI,MACvB,kBAAC,SAAD,CAAQS,SAAU,CAAEX,IAAKK,KAAKP,MAAME,IAAKE,IAAKG,KAAKP,MAAMI,Y,GA1C9CU,aAmDPC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZhB,G,QCrDCkB,E,YACJ,WAAYjB,GAAQ,IAAD,8BAEjB,4CAAMA,KAcRkB,aAAe,SAAAC,GAIb,EAAKC,SAAS,CAACC,GAAIF,EAAEG,OAAOC,SApBX,EAsBnBC,mBAAqB,SAAAL,GAEnB,EAAKC,SAAS,CAACK,OAAQN,EAAEG,OAAOC,MAAMG,QAAQ,KAAK,OAxBlC,EA2BnBC,aA3BmB,uCA2BJ,WAAMR,GAAN,uBAAAS,EAAA,kEAITT,EAAEU,iBAJO,EAKW,EAAK5B,MAAnBoB,EALG,EAKHA,GAAGI,EALA,EAKAA,OACTpB,QAAQC,IAAI,SAAS,EAAKL,QACtB,mKAAmK6B,KAAKT,IAAyB,KAAlBI,EAAOM,OAPjL,iCASYC,IAAMC,IAAI,iFAAiFZ,GATvG,cASDa,EATC,iBAWcF,IAAMG,KAAK,YAAY,CACtCd,GAAIA,EACJe,SAAUF,EAAKG,KAAKD,SACpBE,UAAWJ,EAAKG,KAAKC,UACrBb,OAAOA,IAfN,QAWDc,EAXC,OAiBL,EAAKnB,SAAS,CAACgB,SAASG,EAAOF,KAAKG,SAASJ,SAAUE,UAAUC,EAAOF,KAAKG,SAASF,YAjBjF,wBAoBLG,MAAM,2DApBD,0DAwBTpC,QAAQC,IAAI,gBAxBH,0DA3BI,sDAGjB,EAAKL,MAAQ,CACToB,GAAG,GACHe,SAAS,GACTE,UAAU,GACVb,OAAO,IAPM,E,mHAwDjB,OADApB,QAAQC,IAAI,4BAER,yBAAKoC,UAAU,aAEX,0BAAMC,SAAUpC,KAAKoB,cACjB,yBAAKe,UAAU,cACb,yBAAKA,UAAU,kBACb,2BAAOE,QAAQ,MAAf,cACA,2BAAOC,KAAK,OAAOH,UAAU,eAAeI,GAAG,KAAKC,mBAAiB,SAASC,KAAK,KAAKzB,MAAOhB,KAAKN,MAAMoB,GAAI4B,SAAU1C,KAAKW,eAC7H,2BAAO4B,GAAG,SAASJ,UAAU,wBAA7B,sBAEF,yBAAKA,UAAU,kBACb,2BAAOE,QAAQ,UAAf,gBACA,2BAAOC,KAAK,OAAOH,UAAU,eAAeI,GAAG,SAASC,mBAAiB,aAAaC,KAAK,SAASzB,MAAOhB,KAAKN,MAAMwB,OAAQwB,SAAU1C,KAAKiB,mBAAoB0B,YAAY,kBAC7K,2BAAOJ,GAAG,aAAaJ,UAAU,wBAAjC,sFAGJ,4BAAQG,KAAK,SAASH,UAAU,mBAAhC,WAEJ,yBAAKA,UAAU,YACX,wCAAcnC,KAAKN,MAAMmC,UACzB,yCAAe7B,KAAKN,MAAMqC,YAE9B,kBAAC,EAAD,CAAWpC,IAAKK,KAAKN,MAAMmC,SAAUhC,IAAKG,KAAKN,MAAMqC,iB,GA/ErCxB,aAuFbqC,cAAWlC,GCxFpBmC,E,YACJ,WAAYpD,GAAQ,IAAD,8BAEjB,4CAAMA,KAgBRqD,IAAM,SAAAlC,GACJ,IAAImC,EAAMnC,EAAEG,OAAOC,MACnB,EAAKH,SAAS,CAACmC,OAAOD,KApBL,EAuBnBE,KAAO,SAAArC,GACL,IAAIqC,EAAOrC,EAAEG,OAAOC,MACpB,EAAKH,SAAS,CAACoC,KAAKA,KAzBH,EA2BnBC,OAAS,SAAAtC,GACPA,EAAEU,iBACF,IAAI6B,EAAY,EAAKzD,MAAMyD,UAEvBJ,EAAM,EAAKrD,MAAMyD,UAAU3B,OAC3B4B,EAAS,EAAK1D,MAAMsD,OACpBC,EAAO,EAAKvD,MAAMuD,KAElBI,EAAgB,GAMpB,GAJY,KAATJ,GAAwB,KAATG,GAChB,EAAKvC,SAAS,CAACyC,aAAaH,IAGlB,KAATF,EAGD,GAAGG,EAAS,EAAK1D,MAAMyD,UAAU3B,OAC/BU,MAAM,mEACH,CAEW,KAAXkB,IACDA,EAAS,EAAK1D,MAAMyD,UAAU3B,QAEhC,IAAI,IAAI+B,EAAI,EAAGA,EAAEH,EAAQG,IACvBF,EAAcG,KAAKL,EAAUI,IAE/B,EAAK1C,SAAS,CAACyC,aAAaD,QAE3B,CACD,IAAII,EAAMR,EAAKS,MAAM,KACjBC,EAAW,GACXC,EAAa,GAEjB,GAAyB,KAAtB,EAAKlE,MAAMsD,OAAc,CAC1B,IAAI,IAAIa,EAAE,EAAEA,EAAEd,EAAIc,IAChBD,EAAaT,EAAUU,GAAGC,KAAKJ,MAAM,KACrCD,EAAI,GAAKA,EAAI,GAAGtC,QAAQ,IAAI,IACzBsC,EAAI,KAAOG,EAAW,IAAMH,EAAI,KAAOG,EAAW,IAAMH,EAAI,KAAOG,EAAW,IAC/ED,EAASH,KAAKL,EAAUU,IAG5B,EAAKhD,SAAS,CAACyC,aAAaK,QACzB,CACH,IAAI,IAAII,EAAE,EAAEA,EAAEhB,EAAIgB,IAChBH,EAAaT,EAAUY,GAAGD,KAAKJ,MAAM,KACrCD,EAAI,GAAKA,EAAI,GAAGtC,QAAQ,IAAI,IACzBsC,EAAI,KAAOG,EAAW,IAAMH,EAAI,KAAOG,EAAW,IAAMH,EAAI,KAAOG,EAAW,IAC/ED,EAASH,KAAKL,EAAUY,IAG5B,IAAIC,EAAaL,EAASnC,OAC1B,GAAG4B,EAASY,EACV9B,MAAM,mEAEH,CAEH,IADA,IACQ+B,EADCN,EAASnC,OAAO4B,EAAQ,EACpBa,GAAG,EAAEA,IAChBN,EAASO,MAEX,EAAKrD,SAAS,CAACyC,aAAaK,EAAUQ,cAAcH,QAnF5D,EAAKtE,MAAQ,CACVyD,UAAU,EAAK1D,MAAM0D,UAAUiB,UAC/Bd,aAAa,EAAK7D,MAAM0D,UAExBL,IAAI,EAAKrD,MAAM0D,UAAU3B,OACzBwB,OAAO,GAEPqB,IAAI,KACJpB,KAAK,GACLkB,cAAc,GAbA,E,sEA+FjB,IAAIG,EASJ,OAPAA,EAAUtE,KAAKN,MAAM4D,cAAgBtD,KAAKN,MAAM4D,aAAaiB,KAAI,SAACC,EAAKjB,GACrE,OACE,wBAAIkB,IAAKlB,GACNA,EAAE,EADL,iBACsBiB,EAAK1D,GAD3B,YACwC0D,EAAKV,SAK7C,yBAAK3B,UAAU,eAEb,0BAAMA,UAAU,YAAYC,SAAUpC,KAAKkD,QACzC,yBAAKf,UAAU,UACX,2BAAOG,KAAK,SAASC,GAAG,MAAMG,SAAU1C,KAAK8C,IAAKH,YAAY,wBAC9D,uBAAGR,UAAU,SAASnC,KAAKN,MAAMgF,SAErC,yBAAKvC,UAAU,UACX,2BAAOG,KAAK,OAAOC,GAAG,OAAOG,SAAU1C,KAAKiD,KAAMN,YAAY,uBAC9D,uBAAGR,UAAU,SAASnC,KAAKN,MAAMiF,UAErC,4BAAQrC,KAAK,SAASH,UAAU,mBAAhC,WAEF,4BACCmC,Q,GAxHe/D,aAkIXqC,cAAWC,GCjIpB+B,E,YACJ,WAAYnF,GAAQ,IAAD,8BAEjB,4CAAMA,KAmBRkB,aAAe,SAAAC,GAEb,EAAKC,SAAS,CAACC,GAAIF,EAAEG,OAAOC,SAvBX,EA0BnBI,aA1BmB,uCA0BJ,WAAMR,GAAN,SAAAS,EAAA,sDACb,IACIa,MAAM,SACNtB,EAAEU,iBAGL,MAAMV,GACHsB,MAAM,UAAYtB,GAPT,2CA1BI,sDAGjB,EAAKlB,MAAQ,CACVuC,SAAS,GACT4C,SAAQ,GALM,E,iFAUG,IAAD,OAGjBpD,IAAMC,IAAI,YAAYoD,MAAK,SAAAnD,GAEzB,EAAKd,SAAS,CAACoB,SAASN,EAAKG,KAAKG,SAAU4C,SAAQ,S,+BAuBxD,OAA0B,IAAvB7E,KAAKN,MAAMmF,QAIV,uCAKA,yBAAK1C,UAAU,aACf,uCACG,kBAAC,EAAD,CAAagB,UAAWnD,KAAKN,MAAMuC,gB,GAlDxB1B,aA0DPqC,cAAWgC,G,QCtBXG,E,YAtCb,WAAYtF,GAAO,IAAD,8BAChB,4CAAMA,KAEDC,MAAQ,GAHG,E,sEAahB,OACI,yBAAKyC,UAAU,iDAEf,kBAAC,IAAD,CAAOA,UAAU,eAAe6C,GAAG,KAAnC,OACA,4BAAQ7C,UAAU,iBAAiBG,KAAK,SAAS2C,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpL,0BAAMlD,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BI,GAAG,0BAC3C,wBAAIJ,UAAU,mCACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAOA,UAAU,WAAW6C,GAAG,KAA/B,SAEF,wBAAI7C,UAAU,YACZ,kBAAC,IAAD,CAAOA,UAAU,WAAW6C,GAAG,YAA/B,mB,GA5BOzE,a,+BCyBN+E,MApBf,WACE,OACA,kBAAC,IAAD,KACE,yBAAKnD,UAAU,OACf,kBAAC,IAAD,KACG,yCACA,0BAAMM,KAAK,cAAc8C,QAAQ,WACjC,0BAAMC,SAAS,WAAWD,QAAQ,YAErC,kBAAC,EAAD,MACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAClG,GAAD,OAAW,kBAAC,EAAD,iBAAiBA,EAAjB,CAAwBmG,MAAM,mBACvE,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAClG,GAAD,OAAW,kBAAC,EAAD,iBAAiBA,EAAjB,CAAwBmG,MAAM,oBCRjEC,QACW,cAA7BC,OAAO7D,SAAS8D,UAEe,UAA7BD,OAAO7D,SAAS8D,UAEhBD,OAAO7D,SAAS8D,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,EAAD,MAASO,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,MAAK,SAAAyB,GACjCA,EAAaC,kB","file":"static/js/main.d2aaf0f5.chunk.js","sourcesContent":["import { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport React, {Component} from 'react';\nconst mapStyles = {\n    width: '80%',\n    height: '80%',\n    };\nclass Googlemap extends Component {\n    constructor(props) {\n      super(props);\n      \n      this.state = {\n          lat : parseInt(this.props.lat),\n          lng : parseInt(this.props.lng),\n      }\n    }\n   \n    render() {\n  \n      console.log('render google map')\n      console.log('this.state in google,',this.state)\n      console.log('this.props in google,',this.props)\n      if(this.props.lat === '' && this.props.lng === ''){\n        return (\n          \n            <Map\n            google={this.props.google}\n            zoom={8}\n            style={mapStyles}\n            initialCenter={{  lat: 39.833851,\n                lng: -74.871826}}\n            center={{  lat: 39.833851,\n                lng: -74.871826}} >\n             <Marker position={{ lat: 39.833851, lng: -74.871826}} />\n          </Map>\n          \n          \n      );\n      }else{\n        return (\n          \n            <Map\n            google={this.props.google}\n            zoom={8}\n            style={mapStyles}\n            initialCenter={{  lat: this.props.lat,\n                lng: this.props.lng}}\n                center={{  lat: this.props.lat,\n                    lng: this.props.lng}}>\n             <Marker position={{ lat: this.props.lat, lng: this.props.lng}} />\n          </Map>\n          \n          \n      );\n      }\n      \n    }\n  }\n  export default GoogleApiWrapper({\n    apiKey: 'AIzaSyBmuVFyl548_WfKr2oqchbb4LgEiwHYjEU'\n  })(Googlemap);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Googlemap from './googlemap'\nimport {\n    withRouter\n  } from 'react-router-dom'\nclass Dashboardpage extends Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n        ip:'',\n        latitude:'',\n        longitude:'',\n        mobile:''\n    }\n    \n  }\n  \n  componentDidMount() {\n    \n  }\n \n  handleChange = e => {\n     \n       \n      \n    this.setState({ip: e.target.value});\n  };\n  handleChangemobile = e => {\n \n    this.setState({mobile: e.target.value.replace(/\\D/,'')});\n  };\n\n  handleSubmit = async e => {\n    try {\n\n        \n        e.preventDefault(); \n        let { ip,mobile } = this.state;\n        console.log('state,',this.state)\n        if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip) && mobile.length === 10) { \n            \n            var info = await axios.get('https://api.ipgeolocation.io/ipgeo?apiKey=e53d709ac76741288e7508c734e53785&ip='+ip)\n            \n            var result = await axios.post('/location',{\n                ip: ip,\n                latitude: info.data.latitude,\n                longitude: info.data.longitude,\n                mobile:mobile\n              })   \n            this.setState({latitude:result.data.location.latitude, longitude:result.data.location.longitude})\n\n        }else{\n            alert(\"You have entered an invalid IP address or phone number!\")  \n        }\n  \n    }catch(e){\n        console.log('error: ' + e);\n    }\n  }\n  render() {\n    console.log(\"in landingpage render!!!\")\n    return(\n        <div className='container'>\n        \n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <div className=\"form-group row\">\n                    <label htmlFor=\"ip\">Ip address</label>\n                    <input type=\"text\" className=\"form-control\" id=\"ip\" aria-describedby=\"ipHelp\" name=\"ip\" value={this.state.ip} onChange={this.handleChange}/>\n                    <small id=\"ipHelp\" className=\"form-text text-muted\">Input ip address.</small>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label htmlFor=\"mobile\">Phone Number</label>\n                    <input type=\"text\" className=\"form-control\" id=\"mobile\" aria-describedby=\"mobileHelp\" name=\"mobile\" value={this.state.mobile} onChange={this.handleChangemobile} placeholder=\"EX:2063345306\"/>\n                    <small id=\"mobileHelp\" className=\"form-text text-muted\">Input mobile to get message about information of location(Only allow U.S. User).</small>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n            <div className=\"location\">\n                <p>latitude: {this.state.latitude}</p> \n                <p>longitude: {this.state.longitude}</p>\n            </div>\n            <Googlemap lat={this.state.latitude} lng={this.state.longitude}/>\n        </div>\n           \n    \n    )\n  }\n}\n\nexport default withRouter(Dashboardpage);","import React, {Component} from 'react';\n// import axios from 'axios';\nimport {\n    withRouter\n  } from 'react-router-dom'\nclass Historylist extends Component {\n  constructor(props) {\n   \n    super(props);\n   \n    this.state = {\n       locations:this.props.locations.reverse(),\n       newlocations:this.props.locations,\n\n       top:this.props.locations.length,\n       newtop:'',\n       \n       err:null,\n       date:'',\n       datelocations:0\n    }\n    \n  }\n  \n  top = e =>{\n    var num = e.target.value;    \n    this.setState({newtop:num}) \n  }\n \n  date = e =>{\n    var date = e.target.value;\n    this.setState({date:date}) \n  }\n  submit = e =>{\n    e.preventDefault();\n    var locations = this.state.locations//original \n    // var newlocations = this.state.newlocations;//new location\n    var num = this.state.locations.length;//original \n    var newnum = this.state.newtop;//Input num  \n    var date = this.state.date;//date user input\n    \n    var new_locations = [];//tmp\n    //Both Nothing\n    if(date === '' && newnum===''){\n      this.setState({newlocations:locations})\n    }\n    //if date is nothing\n    if(date === ''){\n     \n      //if num > new location number\n      if(newnum > this.state.locations.length){\n        alert('Number must smaller than the number of element in the list!')\n      }else{\n        //if input is nothing\n        if(newnum === ''){\n          newnum = this.state.locations.length\n        }\n        for(var i = 0; i<newnum; i++){\n          new_locations.push(locations[i])\n        } \n        this.setState({newlocations:new_locations})\n      }   \n    }else{\n        var arr = date.split('-')//user input\n        var arr_next = []\n        var arr_before = []\n  \n        if(this.state.newtop === ''){\n          for(var j=0;j<num;j++){\n            arr_before = locations[j].time.split('-')\n            arr[1] = arr[1].replace('0','')\n            if(arr[0] === arr_before[0] && arr[1] === arr_before[1] && arr[2] === arr_before[2]){\n              arr_next.push(locations[j])\n            }\n          }\n          this.setState({newlocations:arr_next})\n        }else{\n          for(var l=0;l<num;l++){\n            arr_before = locations[l].time.split('-')\n            arr[1] = arr[1].replace('0','')\n            if(arr[0] === arr_before[0] && arr[1] === arr_before[1] && arr[2] === arr_before[2]){\n              arr_next.push(locations[l])\n            }\n          }\n          var datelength = arr_next.length\n          if(newnum > datelength){\n            alert('Number must smaller than the number of element in the list!');\n           \n          }else{\n            var n = (arr_next.length-newnum)-1\n            for(var k=n; k>=0;k--){\n              arr_next.pop()\n            }\n            this.setState({newlocations:arr_next, datelocations:datelength})\n          }\n         \n        }\n    }\n  }\n  render() {\n   \n    var section = null;\n     \n    section = this.state.newlocations && this.state.newlocations.map((next,i) => {\n      return (\n        <li key={i}>\n          {i+1}. Ip Address: {next.ip} - Date: {next.time}\n        </li>\n        )\n    })\n    return(\n        <div className='historylist'>\n         \n          <form className=\"filtertop\" onSubmit={this.submit}>\n            <div className=\"filter\">\n                <input type=\"number\" id=\"top\" onChange={this.top} placeholder=\"Search for top N...\"></input>\n                <p className='error'>{this.state.errtop}</p>\n            </div>\n            <div className=\"filter\">\n                <input type=\"date\" id=\"date\" onChange={this.date} placeholder=\"Search for date...\"></input>\n                <p className='error'>{this.state.errdate}</p>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n          </form>\n          <ol>\n          {section} \n          </ol>\n          \n        </div>\n           \n    \n    )\n  }\n}\n\nexport default withRouter(Historylist);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Historylist from './historyList'\nimport {\n    withRouter\n  } from 'react-router-dom'\nclass History extends Component {\n  constructor(props) {\n   \n    super(props);\n    this.state = {\n       location:[],\n       loading:false\n    }\n    \n  }\n  \n    componentDidMount(){\n     \n      // var info = await axios.get('/history')\n      axios.get('/history').then(info=>{\n   \n        this.setState({location:info.data.location, loading:true})\n      })\n     \n      \n  }\n \n  handleChange = e => {\n   \n    this.setState({ip: e.target.value});\n  };\n\n  handleSubmit = async e => {\n    try {\n        alert('query');\n        e.preventDefault(); \n       \n       \n    }catch(e){\n        alert('error: ' + e);\n    }\n  }\n  render() {\n\n    if(this.state.loading === false){\n     \n      return(\n      \n        <h1>Loading</h1>\n         )\n    }else{\n    \n      return(\n        <div className='container'>\n        <h1>History</h1>\n           <Historylist locations={this.state.location}/>\n        </div>\n    )\n    }\n    \n  }\n}\n\nexport default withRouter(History);","import React, {Component} from 'react';\nimport { BrowserRouter as   Route, Link } from \"react-router-dom\"\n\nclass Header extends Component {\n  constructor(props){\n    super(props);\n    \n    this.state = {\n     \n    }\n    \n  }\n\n\n  render() {\n    \n \n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n       \n        <Link  className=\"navbar-brand\" to='#'>IDT</Link> \n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n      \n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item\">  \n              <Link  className=\"nav-link\" to='/'>Home</Link> \n            </li>\n            <li className=\"nav-item\">\n              <Link  className=\"nav-link\" to='/history'>History</Link> \n            </li>\n          </ul>\n         \n        </div>\n      </nav> \n     \n    ) \n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Landingpage from './Components/landingpage';\nimport Historypage from './Components/history';\nimport Header from './Components/header';\nimport './App.css';\nimport './Assets/css/styles.min.css'//css file\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport MetaTags from 'react-meta-tags';\nfunction App() {\n  return (\n  <Router>\n    <div className=\"App\">\n    <MetaTags>\n       <title>Idt-oa</title>\n       <meta name=\"description\" content=\"Idt-oa\" />\n       <meta property=\"og:title\" content=\"Idt-oa\" />\n    </MetaTags>\n    <Header/>\n     <Switch>\n       <Route exact path=\"/\" render={(props) => <Landingpage {...props} title=\"Landinpage\"/>}/>\n       <Route exact path=\"/history\" render={(props) => <Historypage {...props} title=\"History\"/>}/>\n     </Switch>\n\n </div>\n </Router>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}